<form id="registerAdminForm" class="mt-5 grid md:grid-cols-2 grid-cols-1 gap-3">
  <fieldset>
    <label for="nombre">Nombre</label>
    <input name="nombre" type="text" placeholder="Ingresa el nombre" required />
  </fieldset>

  <fieldset>
    <label for="apellido">Apellido</label>
    <input
      name="apellido"
      type="text"
      placeholder="Ingresa el apellido"
      required
    />
  </fieldset>

  <fieldset class="md:col-span-2">
    <label for="telefono">Telefono</label>
    <input
      name="telefono"
      placeholder="Ingresa el número de teléfono"
      type="tel"
      pattern="^9[0-9]{8}$"
      minlength="9"
      maxlength="9"
      title="El número debe empezar con 9 y tener 9 dígitos"
      required
    />
  </fieldset>

  <fieldset class="md:col-span-2">
    <label for="correo">Correo</label>
    <input
      name="correo"
      type="email"
      placeholder="Ingresa el correo"
      required
      autocomplete="off"
    />
  </fieldset>

  <fieldset class="md:col-span-2">
    <label for="contraseña">Contraseña</label>
    <input
      name="contraseña"
      type="password"
      placeholder="Ingresa la contraseña"
      required
      minlength="8"
      autocomplete="new-password"
    />
  </fieldset>

  <fieldset class="md:col-span-2">
    <label for="rol">Rol</label>
    <select name="rol" required>
      <option value="">Selecciona un rol</option>
      <option value="ADMINISTRADOR">ADMINISTRADOR</option>
    </select>
  </fieldset>

  <button
    type="submit"
    class="bg-violet-700 hover:bg-violet-900 transition duration-300 text-white rounded-lg md:col-span-2 mx-5 py-2 block cursor-pointer"
  >
    Registrar Usuario
  </button>
</form>

<script>
  document.addEventListener("astro:page-load", () => {
    const registerAdminForm = document.getElementById(
      "registerAdminForm"
    ) as HTMLFormElement
    const submitButton = registerAdminForm?.querySelector(
      'button[type="submit"]'
    )

    if (!registerAdminForm || !submitButton) {
      return
    }

    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/
    const telefonoRegex = /^9\d{2}\d{3}\d{3}$/
    const nombreApellidoRegex = /^[A-Za-zÁÉÍÓÚáéíóúÑñ\s]+$/
    const contraseñaMinLength = 8
    const rolOptions = ["ADMINISTRADOR"]

    registerAdminForm.addEventListener("submit", async (e) => {
      e.preventDefault()

      const formData = new FormData(registerAdminForm)
      const data = Object.fromEntries(formData.entries())

      const nombre = data.nombre.toString().trim()
      const apellido = data.apellido.toString().trim()
      const telefono = data.telefono.toString().trim()
      const correo = data.correo.toString().trim()
      const contraseña = data.contraseña.toString()
      const rol = data.rol.toString()

      if (!nombreApellidoRegex.test(nombre)) {
        alert("Nombre solo debe contener letras")
        return
      }

      if (!nombreApellidoRegex.test(apellido)) {
        alert("Apellido solo debe contener letras")
        return
      }

      if (!telefonoRegex.test(telefono)) {
        alert("El celular debe comenzar con 9 y tener el formato: 936369072.")
        return
      }

      if (!emailRegex.test(correo)) {
        alert("Correo electrónico inválido")
        return
      }

      if (contraseña.length < contraseñaMinLength) {
        alert("La contraseña debe tener al menos 8 caracteres")
        return
      }

      if (!rolOptions.includes(rol)) {
        alert("Debe seleccionar un rol válido")
        return
      }

      submitButton.setAttribute("disabled", "true")

      try {
        const res = await fetch("/api/registerUsers", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({
            nombre,
            apellido,
            correo,
            contraseña,
            telefono,
            rol,
          }),
        })

        if (!res.ok) {
          const error = await res.json()
          throw new Error(error.error || "Error al registrar usuario")
        }

        alert("Usuario registrado correctamente")
        registerAdminForm.reset()
      } catch (err) {
        if (err instanceof Error) {
          alert(err.message)
        } else {
          alert("Error desconocido")
        }
      } finally {
        submitButton.removeAttribute("disabled")
      }
    })
  })
</script>

<style>
  @reference "../styles/global.css";

  fieldset {
    @apply flex flex-col;

    > label {
      @apply font-semibold ml-1 mb-0.5;
    }

    > input,
    > select {
      @apply border rounded-lg py-2 px-1 w-full placeholder:pl-1;
    }
  }
</style>
